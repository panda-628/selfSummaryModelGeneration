---------------------1/10------:
Base_AI_answer:Enumerations:
- TestType(BloodTest, Ultrasound, XRay, UrineTest, StoolTest)
- RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
- Doctor(practitionerNumber: int, signature: image, fullName: string, address: string, phoneNumber: string)
- Patient(healthNumber: string, firstName: string, lastName: string, dateOfBirth: date, address: string, phoneNumber: string)
- Test(duration: int)
- Requisition(validFrom: date)
- Appointment(date: date, startTime: time, endTime: time, labName: string, registrationNumber: int, confirmationNumber: int, changeCancellationFee: int)
- Lab(address: string, businessHours: string)

Relationships:
- Doctor prescribe 1..* Test
- Doctor canView 1..* TestResult
- Patient appointment 1..* Appointment
- Patient makeAppointment 0..* Lab
---------------------2/10------:
Base_AI_answer:Enumerations:
- IntervalType(weekly, monthly, every half year, yearly)

Class:
- Doctor(practitionerNumber : int, signature : image, fullName : string, address : string, phoneNumber : string)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phoneNumber : string)
- Test(duration : int, group : string)
- Requisition(validFrom : date)
- TestRepetition(repetitionNumber : int, repetitionInterval : IntervalType)
- TestResult(result : string, report : string)
- Lab(address : string, businessHours : string, registrationNumber : string, fee : int)

Relationships:
- Doctor prescribes 0..* Test
- Patient makes 1..* Appointment
- Test on Requisition 0..* Requisition
- Requisition has 0..* TestRepetition
- Patient views 0..* TestResult
---------------------3/10------:
Base_AI_answer:Enumerations: 
- IntervalType(Weekly, Monthly, EveryHalfYear, Yearly)

Class:
- Doctor(practitionerNumber: numeric, signature: image, fullName: string, address: string, phoneNumber: string)
- Patient(healthNumber: alphanumeric, firstName: string, lastName: string, dateOfBirth: date, address: string, phoneNumber: string)
- Test(duration: int)
- Requisition(validFrom: date, repeatTimes: int, interval: IntervalType)
- Lab(address: string, businessHours: string, registrationNumber: string, fee: int)

Relationships: 
- Doctor prescribe 1..* Test
- Patient book 1..* Test
- Requisition combine 1..* Test
- Requisition repeat 1 Lab
- Patient makeAppointment 1 Lab
- Lab schedule 1..* Test
---------------------4/10------:
Base_AI_answer:Enumerations:
- IntervalType {Weekly, Monthly, Every Half Year, Yearly}

Class:
- Doctor(doctorNumber : int, signature : image, fullName : string, address : string, phoneNumber : string)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : string, address : string, phoneNumber : string)
- Test(duration : int)
- Lab(address : string, businessHours : string, registrationNumber : int, fee : double)

Relationships:
- 1 Doctor prescribe 0..* Test
- 1 Test require 1 Lab
- 0..* Test on 1 Requisition
- 1 Patient make 0..* Appointment
- 1 Appointment at 1 Lab
---------------------5/10------:
Base_AI_answer:Enumerations:
- RepetitionInterval(Weekly, Monthly, EveryHalfYear, Yearly)

Class:
- Doctor(practitionerNumber: int, fullName: String, address: String, phoneNumber: String)
- Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
- Test(duration: int)
- Lab(address: String, businessHours: String, registrationNumber: int)
- Requisition(validFrom: Date)
- Result(status: String, report: String)
- Appointment(date: Date, startTime: Time, endTime: Time, confirmationNumber: int, labName: String, labRegistrationNumber: int)

Relationships:
- Doctor prescribe 0..* Test
- Doctor inherit from Person
- Patient makeAppointment 0..* Appointment
- Lab contain 0..* Test
- Requisition combine 0..* Test
---------------------6/10------:
Base_AI_answer:Class:
- Doctor(practitionerNumber : int, signature : image, fullName : string, address : string, phoneNumber : string)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phoneNumber : string)
- Test(duration : time)
- Requisition(validFrom : date, repetitionTimes : int, repetitionInterval : enum)
- Lab(address : string, businessHours : string, registrationNumber : string, fee : decimal)

Enumerations:
- RepetitionInterval(Weekly, Monthly, EveryHalfYear, Yearly)

Relationships:
- Doctor prescribe 1..* Test
- Patient book 0..* Appointment
- Test belong 1 Lab
- Requisition contains 0..* Test
---------------------7/10------:
Base_AI_answer:Enumerations:
- IntervalType (weekly, monthly, every half year, yearly)

Class:
- Doctor(practitionerNumber : numeric, fullName : string, address : string, phone : string, signature : image)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phone : string)
- Test(duration : time)
- Lab(address : string, businessHours : string, registrationNumber : string)
- Requisition(validFrom : date, repeatInterval : IntervalType, repeatTimes : int)
- Appointment(date : date, startTime : time, endTime : time, confirmationNumber : string, labName : string, labRegistrationNumber : string)
- TestResult(result : string, report : string)

Relationships:
- Doctor prescribe 1..* Test
- Patient book 1..* Appointment
- Lab offer 1..* Test
- Requisition combine 0..* Test
- Requisition repeat 0..* Test
- Requisition view 1..* TestResult
- TestResult for 1 Test
---------------------8/10------:
Base_AI_answer:Enumerations:
LabType (blood, ultrasound, x-ray)

Class:
Doctor(practitionerNumber : int, fullName : string, address : string, phoneNumber : string)
Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phoneNumber : string)
Requisition(validFromDate : date, signature : string)
Test(duration : int)
Lab(address : string, businessHours : string, registrationNumber : string)
Appointment(date : date, startTime : time, endTime : time, confirmationNumber : string, labName : string)

Relationships:
1 Doctor associates 0..* Requisition
1 Requisition contains 0..* Test
Lab associates 0..* Test
Requisition associates 1 LabType
1 Patient books 0..* Appointment
1 Appointment associates 1 Lab
---------------------9/10------:
Base_AI_answer:Enumerations:
- IntervalType(weekly, monthly, every_half_year, yearly)

Class:
- Doctor(practitionerNumber : int, fullName : string, address : string, phoneNumber : string, digitalSignature : image)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phoneNumber : string)
- Test(name : string, group : string, duration : int)
- Requisition(validFromDate : date)
- Appointment(date : date, startTime : time, endTime : time, labName : string, labRegistrationNumber : string, confirmationNumber : string, fee : float)
- Lab(address : string, businessHours : string)

Relationships:
- 1 Doctor prescribe * Test
- 1 Requisition must have 1 Doctor
- 1 Requisition must have 1 Patient
- 1 Requisition contain * Test
- 1 Requisition repeat for * IntervalType
- 1 Patient make 1 Appointment
- 1 Appointment at 1 Lab
---------------------10/10------:
Base_AI_answer:Enumerations:
- TestType(Blood, Ultrasound, XRay, Urine, Stool)

Class:
- Doctor(practitionerNumber : int, signature : image, fullName : string, address : string, phoneNumber : string)
- Patient(healthNumber : string, firstName : string, lastName : string, dateOfBirth : date, address : string, phoneNumber : string)
- Requisition(validFrom : date)
- Test(duration : int)
- RepeatPattern(repetitionNumber : int, interval : enum{Weekly, Monthly, HalfYearly, Yearly})
- Appointment(date : date, startTime : time, endTime : time, labName : string, registrationNumber : string, fee : double, businessHours : string)

Relationships:
- 1 Doctor associates 0..* Requisition
- 1 Patient contains 0..* Requisition
- Requisition associates 0..* Test
- Requisition has 1 RepeatPattern
- Patient makes appointment at 1..* Lab
- Appointment has 1 Lab
- Lab has 1..* BusinessHour
